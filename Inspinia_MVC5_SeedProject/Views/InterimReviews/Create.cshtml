@model Inspinia_MVC5_SeedProject.ViewModels.InterimReviews.InterimReviewViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/plugins/dataPickerStyles")

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Przegląd</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Strona główna", "Index")
            </li>
            <li class="active">
                <strong>Utwórz</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Powrót", "Index", null, new { @class = "btn btn-primary"})
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Nowy przegląd urządzenia <b>@Model.DeviceName</b></h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm()) 
                {
                    @Html.AntiForgeryToken()
    
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.SerialNumber)
                        @Html.HiddenFor(model => model.UniqueNumber)


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-3">
                                <div class="alert alert-success" align="center">
                                    Numer fabryczny: <h3>@Model.SerialNumber</h3>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="alert alert-success" align="center">
                                   Numer unikatowy: <h3>@Model.UniqueNumber</h3>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfReview, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.DateOfReview, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateOfReview, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NextReview, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.NextReview, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NextReview, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ServiceMan, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.ServiceMan, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ServiceMan, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Zapisz" class="btn btn-primary" />
				                @Html.ActionLink("Anuluj", "Index", null, new { @class = "btn btn-white"})
                            </div>
                        </div>
                    </div>
                }

                </div>
            </div>
        </div>
    </div>
 </div>

 

@section Scripts {
    @Scripts.Render("~/plugins/dataPicker")


    <script type="text/javascript">

        $(document).ready(function () {

            $('#DateOfReview').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: 'yyyy-mm-dd',
            });

            $('#NextReview').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true,
                format: 'yyyy-mm-dd',
            });
        });
    </script>
}
