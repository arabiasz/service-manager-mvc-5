@model Inspinia_MVC5_SeedProject.ViewModels.Customers.CustomerViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/plugins/maskStyles")

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Podatnik</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Strona główna", "Index")
            </li>
            <li class="active">
                <strong>Edycja</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Powrót", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Edytuj podatnika</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-warning" })
                        @Html.HiddenFor(model => model.CustomerId)

                        <div class="row">
                            <div class="col-md-8">
                                <section class="widget">
                                    <div class="body">
                                        <div class="form-horizontal" role="form">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", @placeholder = "Nazwa firmy" })
                                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.Street, htmlAttributes: new { @class = "form-control", @placeholder = "Ulica" })
                                                            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.HomeNumber, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.HomeNumber, htmlAttributes: new { @class = "form-control", @placeholder = "Nr domu" })
                                                            @Html.ValidationMessageFor(model => model.HomeNumber, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.PlaceNumber, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.PlaceNumber, htmlAttributes: new { @class = "form-control", @placeholder = "Nr lokalu" })
                                                            @Html.ValidationMessageFor(model => model.PlaceNumber, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.ZipCode, htmlAttributes: new { @class = "form-control", @placeholder = "Kod pocztowy", @data_mask = "99-999" })
                                                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.City, htmlAttributes: new { @class = "form-control", @placeholder = "Miejscowość" })
                                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.Nip, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.Nip, htmlAttributes: new { @class = "form-control", @placeholder = "NIP" })
                                                            @Html.ValidationMessageFor(model => model.Nip, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    @*<div class="form-group">*@
                                                    <div class="col-md-12">
                                                        <div class="checkbox checkbox-danger">
                                                            <input id="MainAddressAsInstallation" name="MainAddressAsInstallation" type="checkbox" value="true">
                                                            <label for="MainAddressAsInstallation"> Ustaw adres główny jako miejsce instalacji</label>
                                                        </div>
                                                    </div>
                                                    @*</div>*@
                                                </div>

                                                <div class="col-md-6">

                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.PostalBox, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.PostalBox, htmlAttributes: new { @class = "form-control", @placeholder = "Skrytka pocztowa" })
                                                            @Html.ValidationMessageFor(model => model.PostalBox, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.Post, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.Post, htmlAttributes: new { @class = "form-control", @placeholder = "Poczta" })
                                                            @Html.ValidationMessageFor(model => model.Post, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        <div class="col-md-12">
                                                            @*@Html.LabelFor(model => model.Regon, htmlAttributes: new { @class = "control-label" })*@
                                                            @Html.TextBoxFor(model => model.Regon, htmlAttributes: new { @class = "form-control", @placeholder = "REGON" })
                                                            @Html.ValidationMessageFor(model => model.Regon, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </section>
                            </div>
                            <div class="col-md-4">
                                <section class="widget">
                                    <div class="body">
                                        <div class="form-horizontal" role="form">
                                            <div class="form-group">
                                                <div class="col-md-12">
                                                    @*@Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })*@
                                                    @Html.TextBoxFor(model => model.Country, htmlAttributes: new { @class = "form-control", @placeholder = "Kraj" })
                                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-12">
                                                    @*@Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label" })*@
                                                    @Html.TextBoxFor(model => model.Province, htmlAttributes: new { @class = "form-control", @placeholder = "Województwo" })
                                                    @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-12">
                                                    @*@Html.LabelFor(model => model.Community, htmlAttributes: new { @class = "control-label" })*@
                                                    @Html.TextBoxFor(model => model.Community, htmlAttributes: new { @class = "form-control", @placeholder = "Gmina" })
                                                    @Html.ValidationMessageFor(model => model.Community, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-12">
                                                    @*@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })*@
                                                    @Html.TextBoxFor(model => model.Phone, htmlAttributes: new { @class = "form-control", @placeholder = "Telefon" })
                                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-12">
                                                    @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })*@
                                                    @Html.TextBoxFor(model => model.Email, htmlAttributes: new { @class = "form-control", @placeholder = "E-mail" })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-12">
                                                </div>
                                            </div>

                                            <div class="form-group pull-right">
                                                <div class="col-md-12">
                                                    <input type="submit" value="Zapisz" class="btn btn-primary" />
                                                    @Html.ActionLink("Anuluj", "Index", null, new { @class = "btn btn-white" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </section>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="editor-container" tabindex="-1"
     role="dialog" aria-labelledby="editor-title">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content animated flipInY" id="editor-content-container"></div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @*@Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/plugins/mask")

    <script src="https://cdn.datatables.net/buttons/1.4.2/js/buttons.colVis.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

		    $('.create-group').click(function () {
		        alert(".l.");
		        var url = "/Addresses/Create?CustomerId=";
		        var id = $(this).attr('data-id');
		        $.get(url + id, function (data) {
		            $('#editor-content-container').html(data);
		            $('#editor-container').modal('show');
		        });
		    });

		    function ParsUnob(data, status, xhr) {
		        $.validator.unobtrusive.parse($(data));
		        $('#editor-content-container').html(xhr.responseText);
		        $('#editor-container').modal('show');

		        if (data.url) {
		            window.location.href = data.url;
		        }
		    }
		});
    </script>
}



